RUNNING h5flow -z lzf -c yamls/proto_nd_flow/workflows/charge/charge_event_building_mc.yaml yamls/proto_nd_flow/workflows/charge/charge_event_reconstruction_mc.yaml yamls/proto_nd_flow/workflows/combined/combined_reconstruction_mc.yaml yamls/proto_nd_flow/workflows/charge/prompt_calibration_mc.yaml yamls/proto_nd_flow/workflows/charge/final_calibration_mc.yaml -i /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5 -o /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
WARNING:root:Running without mpi4py because No module named 'mpi4py'
WARNING:root:Source dataset charge/raw_events has no inputfile in metadata stored under 'input_filename', using {self.input_filename} for RunData lookup
WARNING:root:Could not find row matching /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5 in data/proto_nd_flow/runlist-2x2-mcexample.txt
WARNING:root:Loading geometry from ['data/proto_nd_flow/multi_tile_layout-2.4.16_v4.yaml', 'data/proto_nd_flow/multi_tile_layout-2.5.16_v4.yaml']...
WARNING:root:Loading geometry from data/proto_nd_flow/light_module_desc-4.0.0.yaml...
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/ndlar_flow/src/proto_nd_flow/reco/charge/raw_event_generator.py:199: UserWarning: Using 'vertex_id'(unique for beam simulation, but not for mpvmpr) instead of 'file_vertex_id'.
  warnings.warn("Using 'vertex_id'(unique for beam simulation, but not for mpvmpr) instead of 'file_vertex_id'.")
~~~ H5FLOW ~~~
output file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
input file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
compression: lzf
~~~~~~~~~~~~~~

~~~ WORKFLOW (1/5) ~~~
yamls/proto_nd_flow/workflows/charge/charge_event_building_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
Hello
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
create RawEventGenerator(charge/raw_events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
RunData.init(charge/raw_events)
Geometry.init(charge/raw_events)
RawEventGenerator.init()
Hope you are not processing neutrino simulation! There is no information for neutrino interactions.
generating truth references:   0%|          | 0/427 [00:00<?, ?it/s]generating truth references:   2%|▏         | 8/427 [00:00<00:05, 72.74it/s]generating truth references:   4%|▎         | 16/427 [00:00<00:05, 70.71it/s]generating truth references:   6%|▌         | 24/427 [00:00<00:05, 77.87it/s]generating truth references:   8%|▊         | 34/427 [00:00<00:04, 93.99it/s]generating truth references:  10%|█         | 44/427 [00:00<00:05, 67.27it/s]generating truth references:  12%|█▏        | 51/427 [00:00<00:07, 53.35it/s]generating truth references:  14%|█▎        | 58/427 [00:00<00:05, 69.95it/s]generating truth references:  15%|█▌        | 65/427 [00:00<00:05, 69.30it/s]generating truth references:  17%|█▋        | 72/427 [00:01<00:05, 65.86it/s]generating truth references:  19%|█▊        | 80/427 [00:01<00:04, 75.07it/s]generating truth references:  21%|██        | 88/427 [00:01<00:05, 57.88it/s]generating truth references:  22%|██▏       | 94/427 [00:01<00:05, 55.93it/s]generating truth references:  24%|██▍       | 102/427 [00:01<00:04, 75.38it/s]generating truth references:  26%|██▌       | 111/427 [00:01<00:03, 83.73it/s]generating truth references:  28%|██▊       | 120/427 [00:01<00:05, 58.38it/s]generating truth references:  30%|██▉       | 127/427 [00:01<00:04, 68.01it/s]generating truth references:  31%|███▏      | 134/427 [00:01<00:04, 60.49it/s]generating truth references:  33%|███▎      | 141/427 [00:02<00:05, 53.92it/s]generating truth references:  34%|███▍      | 147/427 [00:02<00:05, 54.33it/s]generating truth references:  36%|███▌      | 153/427 [00:02<00:04, 54.81it/s]generating truth references:  38%|███▊      | 161/427 [00:02<00:03, 75.44it/s]generating truth references:  40%|███▉      | 169/427 [00:02<00:03, 72.86it/s]generating truth references:  41%|████▏     | 177/427 [00:02<00:04, 53.02it/s]generating truth references:  43%|████▎     | 183/427 [00:02<00:05, 48.30it/s]generating truth references:  44%|████▍     | 188/427 [00:02<00:05, 47.40it/s]generating truth references:  46%|████▌     | 195/427 [00:03<00:03, 60.12it/s]generating truth references:  47%|████▋     | 202/427 [00:03<00:03, 60.48it/s]generating truth references:  49%|████▉     | 209/427 [00:03<00:03, 59.32it/s]generating truth references:  51%|█████     | 217/427 [00:03<00:02, 78.50it/s]generating truth references:  53%|█████▎    | 227/427 [00:03<00:02, 91.52it/s]generating truth references:  56%|█████▌    | 237/427 [00:03<00:02, 90.73it/s]generating truth references:  58%|█████▊    | 247/427 [00:03<00:02, 68.01it/s]generating truth references:  59%|█████▉    | 254/427 [00:03<00:02, 63.80it/s]generating truth references:  61%|██████▏   | 262/427 [00:03<00:02, 72.25it/s]generating truth references:  63%|██████▎   | 270/427 [00:04<00:02, 74.53it/s]generating truth references:  65%|██████▌   | 278/427 [00:04<00:02, 59.37it/s]generating truth references:  67%|██████▋   | 286/427 [00:04<00:02, 68.55it/s]generating truth references:  69%|██████▉   | 295/427 [00:04<00:01, 89.47it/s]generating truth references:  71%|███████   | 304/427 [00:04<00:01, 87.46it/s]generating truth references:  73%|███████▎  | 313/427 [00:04<00:01, 76.60it/s]generating truth references:  75%|███████▌  | 321/427 [00:04<00:01, 74.42it/s]generating truth references:  77%|███████▋  | 329/427 [00:04<00:01, 72.71it/s]generating truth references:  79%|███████▉  | 338/427 [00:04<00:01, 85.42it/s]generating truth references:  81%|████████▏ | 347/427 [00:05<00:01, 68.96it/s]generating truth references:  83%|████████▎ | 354/427 [00:05<00:01, 53.01it/s]generating truth references:  84%|████████▍ | 360/427 [00:05<00:01, 50.68it/s]generating truth references:  86%|████████▋ | 369/427 [00:05<00:00, 83.56it/s]generating truth references:  89%|████████▉ | 379/427 [00:05<00:00, 85.95it/s]generating truth references:  91%|█████████ | 388/427 [00:05<00:00, 79.92it/s]generating truth references:  93%|█████████▎| 396/427 [00:05<00:00, 70.38it/s]generating truth references:  95%|█████████▍| 405/427 [00:05<00:00, 87.93it/s]generating truth references:  97%|█████████▋| 414/427 [00:05<00:00, 82.93it/s]generating truth references:  99%|█████████▉| 423/427 [00:06<00:00, 70.37it/s]generating truth references: 100%|██████████| 427/427 [00:06<00:00, 69.25it/s]
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/raw_events:
  
  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:01<00:00,  1.25s/it]100%|##########| 1/1 [00:01<00:00,  1.25s/it]
~~~~~~~~~~~

~~~ FINISH ~~~
RawEventGenerator.finish()
RunData.finish(charge/raw_events)
Geometry.finish(charge/raw_events)
~~~~~~~~~~~~~~

~~~ WORKFLOW (2/5) ~~~
yamls/proto_nd_flow/workflows/charge/charge_event_reconstruction_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create H5FlowDatasetLoopGenerator(charge/raw_events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create timestamp_corrector: TimestampCorrector(packets_dset_name=charge/packets, ts_dset_name=charge/packets_corr_ts, correction={1: [0.0, 0.0], 2: [0.0, 0.0], 3: [0.0, 0.0], 4: [0.0, 0.0], 5: [0.0, 0.0], 6: [0.0, 0.0], 7: [0.0, 0.0], 8: [0.0, 0.0]})
create ext_trig_finder: ExternalTriggerFinder(packets_dset_name=charge/packets, ts_dset_name=charge/packets_corr_ts, ext_trigs_dset_name=charge/ext_trigs, pacman_trigger_enabled=True, pacman_trigger_word_filter=2)
create raw_hit_builder: RawHitBuilder(packets_dset_name=charge/packets, ts_dset_name=charge/packets_corr_ts, hits_dset_name=charge/raw_hits)
create event_builder: EventBuilder(hits_dset_name=charge/raw_hits, ext_trigs_dset_name=charge/ext_trigs, events_dset_name=charge/events)
RunData.init(charge/raw_events)
Geometry.init(charge/raw_events)
H5FlowDatasetLoopGenerator.init()
timestamp_corrector.init(charge/raw_events)
ext_trig_finder.init(charge/raw_events)
raw_hit_builder.init(charge/raw_events)
event_builder.init(charge/raw_events)
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/raw_events:
  timestamp_corrector -> ext_trig_finder -> raw_hit_builder -> event_builder
  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 11.15it/s]
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
timestamp_corrector.finish(charge/raw_events)
ext_trig_finder.finish(charge/raw_events)
raw_hit_builder.finish(charge/raw_events)
event_builder.finish(charge/raw_events)
RunData.finish(charge/raw_events)
Geometry.finish(charge/raw_events)
~~~~~~~~~~~~~~

~~~ WORKFLOW (3/5) ~~~
yamls/proto_nd_flow/workflows/combined/combined_reconstruction_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create LArData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create H5FlowDatasetLoopGenerator(charge/events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create t0_reco: T0Reconstruction(ext_trigs_dset_name=charge/ext_trigs, raw_hits_dset_name=charge/raw_hits, t0_dset_name=combined/t0)
RunData.init(charge/events)
Geometry.init(charge/events)
LArData.init(charge/events)
H5FlowDatasetLoopGenerator.init()
t0_reco.init(charge/events)
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/events:
  t0_reco
  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 26.57it/s]
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
t0_reco.finish(charge/events)
RunData.finish(charge/events)
Geometry.finish(charge/events)
LArData.finish(charge/events)
~~~~~~~~~~~~~~

~~~ WORKFLOW (4/5) ~~~
yamls/proto_nd_flow/workflows/charge/prompt_calibration_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create LArData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create H5FlowDatasetLoopGenerator(charge/raw_events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create calib_hit_builder: CalibHitBuilder(events_dset_name=charge/events, packets_dset_name=charge/packets, packets_index_name=charge/packets_index, raw_hits_dset_name=charge/raw_hits, t0_dset_name=combined/t0, max_contrib_segments=10, calib_hits_dset_name=charge/calib_prompt_hits, mc_hit_frac_dset_name=mc_truth/calib_prompt_hit_backtrack, pedestal_mv=580.0, vref_mv=1568.0, vcm_mv=478.1, adc_counts=256, gain=4.522, pedestal_file=data/proto_nd_flow/reference-cold-pedestal-2024_06_05_08_28_19_CDTevd_ped.tile_id_swapped.decimal.json)
RunData.init(charge/raw_events)
LArData.init(charge/raw_events)
Geometry.init(charge/raw_events)
H5FlowDatasetLoopGenerator.init()
calib_hit_builder.init(charge/raw_events)
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/raw_events:
  calib_hit_builder
  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  3.99it/s]100%|##########| 1/1 [00:00<00:00,  3.99it/s]
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/flow.venv/lib/python3.11/site-packages/sklearn/base.py:442: InconsistentVersionWarning: Trying to unpickle estimator KernelDensity from version 1.3.2 when using version 1.7.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
calib_hit_builder.finish(charge/raw_events)
RunData.finish(charge/raw_events)
LArData.finish(charge/raw_events)
Geometry.finish(charge/raw_events)
~~~~~~~~~~~~~~

~~~ WORKFLOW (5/5) ~~~
yamls/proto_nd_flow/workflows/charge/final_calibration_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create LArData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create H5FlowDatasetLoopGenerator(charge/raw_events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create calib_noise_filter: CalibNoiseFilter(events_dset_name=charge/events, hits_name=charge/calib_prompt_hits, filter_function_names=['hot_pixel_filter', 'correlated_post_trigger_filter', 'low_current_filter'], low_current_filter__channel_threshold_file=data/proto_nd_flow/thresholds_2x2.swapped.json, low_current_filter__threshold=1, hot_pixel_filter__max_n_hits=35, calib_hits_dset_name=charge/calib_final_hits, mc_hit_frac_dset_name=mc_truth/calib_final_hit_backtrack)
RunData.init(charge/raw_events)
LArData.init(charge/raw_events)
Geometry.init(charge/raw_events)
H5FlowDatasetLoopGenerator.init()
calib_noise_filter.init(charge/raw_events)
using threshold: 1.0
320018  channels in threshold file.
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/raw_events:
  calib_noise_filter
  0%|          | 0/1 [00:00<?, ?it/s]36  out of  722  channels used default threshold.
100%|##########| 1/1 [00:00<00:00,  2.89it/s]100%|##########| 1/1 [00:00<00:00,  2.89it/s]
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
calib_noise_filter.finish(charge/raw_events)
RunData.finish(charge/raw_events)
LArData.finish(charge/raw_events)
Geometry.finish(charge/raw_events)
~~~~~~~~~~~~~~

RUNNING h5flow -z lzf -c yamls/proto_nd_flow/workflows/light/light_event_building_mc.yaml yamls/proto_nd_flow/workflows/light/light_event_reconstruction_mc.yaml -i /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5 -o /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
WARNING:root:Running without mpi4py because No module named 'mpi4py'
~~~ H5FLOW ~~~
output file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
input file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
compression: lzf
~~~~~~~~~~~~~~

~~~ WORKFLOW (1/2) ~~~
yamls/proto_nd_flow/workflows/light/light_event_building_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
Hello
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
create LightEventGeneratorMC(light/events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.LARNDSIM.hdf5
baseline_offset:  -28000
RunData.init(light/events)
LightEventGeneratorMC.init()
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on light/events:
  
  0%|          | 0/2 [00:00<?, ?it/s] 50%|#####     | 1/2 [00:01<00:01,  1.18s/it] 50%|#####     | 1/2 [00:01<00:01,  1.19s/it]
~~~~~~~~~~~

~~~ FINISH ~~~
LightEventGeneratorMC.finish()
RunData.finish(light/events)
~~~~~~~~~~~~~~

~~~ WORKFLOW (2/2) ~~~
yamls/proto_nd_flow/workflows/light/light_event_reconstruction_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create Geometry() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create LArData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
Could not find generator description, using default loop behavior on light/events dataset
create H5FlowDatasetLoopGenerator(light/events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create timestamp_corrector: LightTimestampCorrector(t_ns_dset_name=light/t_ns, slope={0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0})
create wvfm_filt: WaveformNoiseFilter(wvfm_dset_name=light/wvfm, fwvfm_dset_name=light/fwvfm, noise_dset_name=light/fwvfm_noise, filter_channels=[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], filter_samples=[0, 80], modulo_param=10, keep_noise=False, segment_size=25, num_segment=40)
create wvfm_align: WaveformAlign(wvfm_dset_name=light/fwvfm, sim_latency=100)
create wvfm_calib: WaveformCalib(wvfm_dset_name=light/fwvfm, cwvfm_dset_name=light/cwvfm, gain={'default': 0.0, 0: {4: 0.006431, 5: 0.006431, 6: 0.006431, 7: 0.006431, 8: 0.006431, 9: 0.006431, 10: 0.006431, 11: 0.006431, 12: 0.006431, 13: 0.006431, 14: 0.006431, 15: 0.006431, 20: 0.006431, 21: 0.006431, 22: 0.006431, 23: 0.006431, 24: 0.006431, 25: 0.006431, 26: 0.006431, 27: 0.006431, 28: 0.006431, 29: 0.006431, 30: 0.006431, 31: 0.006431, 36: 0.006431, 37: 0.006431, 38: 0.006431, 39: 0.006431, 40: 0.006431, 41: 0.006431, 42: 0.006431, 43: 0.006431, 44: 0.006431, 45: 0.006431, 46: 0.006431, 47: 0.006431, 52: 0.006431, 53: 0.006431, 54: 0.006431, 55: 0.006431, 56: 0.006431, 57: 0.006431, 58: 0.006431, 59: 0.006431, 60: 0.006431, 61: 0.006431, 62: 0.006431, 63: 0.006431}, 1: {4: 0.005243, 5: 0.005243, 6: 0.005243, 7: 0.005243, 8: 0.005243, 9: 0.005243, 10: 0.005243, 11: 0.005243, 12: 0.005243, 13: 0.005243, 14: 0.005243, 15: 0.005243, 20: 0.005243, 21: 0.005243, 22: 0.005243, 23: 0.005243, 24: 0.005243, 25: 0.005243, 26: 0.005243, 27: 0.005243, 28: 0.005243, 29: 0.005243, 30: 0.005243, 31: 0.005243, 36: 0.005243, 37: 0.005243, 38: 0.005243, 39: 0.005243, 40: 0.005243, 41: 0.005243, 42: 0.005243, 43: 0.005243, 44: 0.005243, 45: 0.005243, 46: 0.005243, 47: 0.005243, 52: 0.005243, 53: 0.005243, 54: 0.005243, 55: 0.005243, 56: 0.005243, 57: 0.005243, 58: 0.005243, 59: 0.005243, 60: 0.005243, 61: 0.005243, 62: 0.005243, 63: 0.005243}, 2: {4: 0.0017397, 5: 0.0016915, 6: 0.0016959, 7: 0.0017129, 8: 0.0016701, 9: 0.0016251, 10: 0.0016735, 11: 0.0015358, 12: 0.0016053, 13: 0.0015842, 14: 0.0015804, 15: 0.0016793, 20: 0.0016345, 21: 0.0016019, 22: 0.0016383, 23: 0.0016283, 24: 0.0016411, 25: 0.0016879, 26: 0.001727, 27: 0.0016895, 28: 0.00172, 29: 0.0017788, 30: 0.0016895, 31: 0.0015507, 36: 0.0015007, 37: 0.0016477, 38: 0.00176, 39: 0.0017804, 40: 0.0016608, 41: 0.001605, 42: 0.0015556, 43: 0.0016855, 44: 0.0015753, 45: 0.0017264, 46: 0.0015826, 47: 0.0015382, 52: 0.001544, 53: 0.0017192, 54: 0.0016169, 55: 0.0017095, 56: 0.0015831, 57: 0.0015469, 58: 0.0016146, 59: 0.0015531, 60: 0.0015841, 61: 0.0015923, 62: 0.0014446, 63: 0.0017023}, 3: {4: 0.0016712, 5: 0.00186, 6: 0.0015024, 7: 0.0016284, 8: 0.0016712, 9: 0.0017356, 10: 0.0016383, 11: 0.0016276, 12: 0.0014984, 13: 0.0017903, 14: 0.0016885, 15: 0.0015541, 20: 0.0015926, 21: 0.0016946, 22: 0.0018089, 23: 0.001819, 24: 0.0016946, 25: 0.0015872, 26: 0.0016326, 27: 0.0016425, 28: 0.0018183, 29: 0.0015652, 30: 0.0016493, 31: 0.001571, 36: 0.0016353, 37: 0.0016476, 38: 0.0016133, 39: 0.0016975, 40: 0.0016288, 41: 0.0017645, 42: 0.0015725, 43: 0.0016273, 44: 0.0015838, 45: 0.00159, 46: 0.001632, 47: 0.0015408, 52: 0.0015554, 53: 0.0016324, 54: 0.0016267, 55: 0.0016495, 56: 0.0016123, 57: 0.0017098, 58: 0.0016493, 59: 0.001715, 60: 0.0015309, 61: 0.0016447, 62: 0.001706, 63: 0.0016359}, 4: {4: 0.0015856, 5: 0.0015626, 6: 0.0016201, 7: 0.0015232, 8: 0.0015324, 9: 0.0014818, 10: 0.0015254, 11: 0.0015537, 12: 0.0016877, 13: 0.0016071, 14: 0.0017056, 15: 0.0016128, 20: 0.0014385, 21: 0.0014355, 22: 0.0014396, 23: 0.0014695, 24: 0.0015829, 25: 0.0014614, 26: 0.0014923, 27: 0.0015275, 28: 0.0016327, 29: 0.0014609, 30: 0.0015553, 31: 0.0018567, 36: 0.0015644, 37: 0.0015282, 38: 0.0015926, 39: 0.0015484, 40: 0.0017056, 41: 0.0015371, 42: 0.0016239, 43: 0.0018195, 44: 0.0016294, 45: 0.0017071, 46: 0.0014375, 47: 0.0015485, 52: 0.0015444, 53: 0.0014333, 54: 0.001575, 55: 0.001444, 56: 0.0017777, 57: 0.0015388, 58: 0.0016709, 59: 0.0015413, 60: 0.0016146, 61: 0.0014655, 62: 0.0016441, 63: 0.0016227}, 5: {4: 0.0015097, 5: 0.0015861, 6: 0.0015445, 7: 0.001541, 8: 0.0016474, 9: 0.0017049, 10: 0.0016357, 11: 0.0015955, 12: 0.0017116, 13: 0.0015786, 14: 0.0015314, 15: 0.0016322, 20: 0.0016727, 21: 0.0016886, 22: 0.0016192, 23: 0.0017521, 24: 0.001686, 25: 0.0017192, 26: 0.0015609, 27: 0.001596, 28: 0.001569, 29: 0.0018254, 30: 0.0014738, 31: 0.0017433, 36: 0.0015876, 37: 0.0015547, 38: 0.0015937, 39: 0.0015898, 40: 0.0014475, 41: 0.0017894, 42: 0.001745, 43: 0.0016526, 44: 0.0015099, 45: 0.0015007, 46: 0.0016242, 47: 0.0016013, 52: 0.0017041, 53: 0.0015543, 54: 0.001601, 55: 0.001723, 56: 0.0016249, 57: 0.001639, 58: 0.00161, 59: 0.0015588, 60: 0.0015895, 61: 0.0015694, 62: 0.0017876, 63: 0.0016726}, 6: {4: 0.0020945, 5: 0.002338, 6: 0.0017682, 7: 0.0018209, 8: 0.002101, 9: 0.0023549, 10: 0.0019081, 11: 0.0019607, 12: 0.0021091, 13: 0.0020824, 14: 0.0022039, 15: 0.0019556, 20: 0.0019862, 21: 0.0019862, 22: 0.0019862, 23: 0.0019862, 24: 0.0020116, 25: 0.0019615, 26: 0.0020654, 27: 0.0020816, 28: 0.0023017, 29: 0.0021931, 30: 0.0020055, 31: 0.0019259, 36: 0.0019959, 37: 0.0020529, 38: 0.0022126, 39: 0.0022453, 40: 0.0023476, 41: 0.0023804, 42: 0.0022357, 43: 0.0024074, 44: 0.0021623, 45: 0.0019387, 46: 0.0014517, 47: 0.0019765, 52: 0.0023239, 53: 0.0026163, 54: 0.0027453, 55: 0.0028082, 56: 0.0018386, 57: 0.0027011, 58: 0.0025293, 59: 0.0023847, 60: 0.0024092, 61: 0.0023344, 62: 0.0025703, 63: 0.0019247}, 7: {4: 0.0015294, 5: 0.0015294, 6: 0.0015294, 7: 0.0014862, 8: 0.0016325, 9: 0.001479, 10: 0.0014811, 11: 0.0015537, 12: 0.0016829, 13: 0.0015297, 14: 0.0015252, 15: 0.0015516, 20: 0.0016503, 21: 0.001633, 22: 0.0016248, 23: 0.0014387, 24: 0.0015051, 25: 0.0015386, 26: 0.0016251, 27: 0.0016473, 28: 0.0015627, 29: 0.0015454, 30: 0.0016233, 31: 0.0016633, 36: 0.0016608, 37: 0.0015465, 38: 0.0018018, 39: 0.001724, 40: 0.001682, 41: 0.0015765, 42: 0.0014954, 43: 0.0016527, 44: 0.0015928, 45: 0.0017008, 46: 0.0017952, 47: 0.0017129, 52: 0.0015971, 53: 0.0017445, 54: 0.001867, 55: 0.0018652, 56: 0.0019985, 57: 0.0017882, 58: 0.001658, 59: 0.0015815, 60: 0.0016827, 61: 0.0015668, 62: 0.0017253, 63: 0.0016435}}, gain_mc={'default': 0.0, 0: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 1: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 2: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 3: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 4: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 5: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 6: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}, 7: {4: 0.022857, 5: 0.022857, 6: 0.022857, 7: 0.022857, 8: 0.022857, 9: 0.022857, 10: 0.022857, 11: 0.022857, 12: 0.022857, 13: 0.022857, 14: 0.022857, 15: 0.022857, 20: 0.022857, 21: 0.022857, 22: 0.022857, 23: 0.022857, 24: 0.022857, 25: 0.022857, 26: 0.022857, 27: 0.022857, 28: 0.022857, 29: 0.022857, 30: 0.022857, 31: 0.022857, 36: 0.022857, 37: 0.022857, 38: 0.022857, 39: 0.022857, 40: 0.022857, 41: 0.022857, 42: 0.022857, 43: 0.022857, 44: 0.022857, 45: 0.022857, 46: 0.022857, 47: 0.022857, 52: 0.022857, 53: 0.022857, 54: 0.022857, 55: 0.022857, 56: 0.022857, 57: 0.022857, 58: 0.022857, 59: 0.022857, 60: 0.022857, 61: 0.022857, 62: 0.022857, 63: 0.022857}}, thresh={'default': 0.0, 0: {4: -29356.88, 5: -28131.24, 6: -28722.68, 7: -28677.84, 8: -28434.92, 9: -28224.32, 10: -28784.84, 11: -28784.84, 12: -28776.0, 13: -28260.76, 14: -28672.72, 15: -29125.56, 20: -29998.04, 21: -29998.04, 22: -28582.96, 23: -28224.64, 24: -28105.88, 25: -28237.28, 26: -27460.28, 27: -28247.2, 28: -27923.48, 29: -28181.32, 30: -28216.56, 31: -28573.16, 36: -27768.24, 37: -27923.24, 38: -27757.04, 39: -28431.04, 40: -28075.8, 41: -27771.36, 42: -28387.96, 43: -28451.6, 44: -27806.04, 45: -28081.28, 46: -28714.4, 47: -28438.52, 52: -28060.32, 53: -28717.0, 54: -28560.6, 55: -27731.92, 56: -27087.84, 57: -28435.4, 58: -26852.6, 59: -28640.36, 60: -28793.12, 61: -27722.28, 62: -28273.32, 63: -28808.64}, 1: {4: -28557.64, 5: -28145.96, 6: -28033.76, 7: -28038.64, 8: -28146.04, 9: -28392.96, 10: -28581.56, 11: -28172.72, 12: -28096.4, 13: -27897.24, 14: -28634.52, 15: -28280.88, 20: -28037.12, 21: -27481.44, 22: -28005.8, 23: -30044.84, 24: -28102.64, 25: -28676.2, 26: -28078.72, 27: -27999.96, 28: -28300.44, 29: -28380.16, 30: -28262.44, 31: -28314.32, 36: -27991.72, 37: -28398.88, 38: -28543.12, 39: -28235.16, 40: -27204.64, 41: -27819.64, 42: -28630.96, 43: -28524.0, 44: -28505.28, 45: -27962.64, 46: -28555.48, 47: -28210.92, 52: -27601.28, 53: -27979.2, 54: -28154.92, 55: -28536.76, 56: -28239.04, 57: -28400.96, 58: -26636.24, 59: -28833.56, 60: -28482.24, 61: -28783.56, 62: -28194.84, 63: -28517.8}, 2: {4: -28833.16, 5: -28141.64, 6: -28652.72, 7: -28036.6, 8: -28558.72, 9: -28363.8, 10: -28498.36, 11: -28051.4, 12: -28553.24, 13: -28666.36, 14: -28867.44, 15: -28777.68, 20: -28059.56, 21: -27828.96, 22: -27957.04, 23: -28716.28, 24: -28210.76, 25: -28302.04, 26: -29202.44, 27: -27960.64, 28: -28635.32, 29: -28193.12, 30: -28464.24, 31: -28749.88, 36: -28273.76, 37: -28515.92, 38: -28425.76, 39: -28983.84, 40: -28350.56, 41: -28163.08, 42: -28063.76, 43: -28328.4, 44: -28811.32, 45: -29830.44, 46: -28547.4, 47: -28777.04, 52: -27608.92, 53: -28228.88, 54: -28228.88, 55: -28512.16, 56: -28231.64, 57: -28249.68, 58: -28157.72, 59: -27765.52, 60: -27738.96, 61: -28606.08, 62: -28392.32, 63: -27952.44}, 3: {4: -28677.2, 5: -27985.16, 6: -28783.92, 7: -28285.32, 8: -28761.36, 9: -28227.08, 10: -28079.8, 11: -28079.8, 12: -28555.88, 13: -28411.24, 14: -28522.32, 15: -28178.28, 20: -28151.16, 21: -28068.56, 22: -28482.64, 23: -27733.72, 24: -28227.2, 25: -28543.04, 26: -28043.68, 27: -28043.68, 28: -28488.24, 29: -28186.56, 30: -28806.36, 31: -28591.52, 36: -28419.8, 37: -28210.52, 38: -27723.12, 39: -27969.28, 40: -28310.16, 41: -27845.56, 42: -28561.68, 43: -28044.36, 44: -28346.72, 45: -27788.4, 46: -27848.72, 47: -28328.48, 52: -28092.04, 53: -28071.16, 54: -27786.64, 55: -28049.56, 56: -28011.12, 57: -28584.84, 58: -28261.32, 59: -27908.36, 60: -28663.0, 61: -28211.36, 62: -28211.36, 63: -28080.36}, 4: {4: -28322.56, 5: -28255.36, 6: -28715.88, 7: -28295.64, 8: -28919.56, 9: -28568.48, 10: -29092.56, 11: -27926.4, 12: -27878.84, 13: -28685.4, 14: -27716.92, 15: -28732.92, 20: -28621.72, 21: -27299.2, 22: -28111.6, 23: -28458.96, 24: -28295.0, 25: -27964.72, 26: -28494.16, 27: -28335.88, 28: -27878.48, 29: -27975.2, 30: -28772.56, 31: -28499.64, 36: -28272.2, 37: -28541.16, 38: -28481.68, 39: -28498.88, 40: -28355.24, 41: -27568.96, 42: -28194.56, 43: -27581.8, 44: -28065.72, 45: -27610.36, 46: -28826.72, 47: -27871.24, 52: -28275.12, 53: -28676.08, 54: -28408.36, 55: -27798.44, 56: -28770.36, 57: -28427.68, 58: -28638.2, 59: -28407.84, 60: -28976.32, 61: -28404.72, 62: -28072.32, 63: -28335.96}, 5: {4: -27861.96, 5: -28237.88, 6: -28237.88, 7: -28534.8, 8: -28313.8, 9: -27782.72, 10: -28606.28, 11: -29076.52, 12: -28333.72, 13: -29259.4, 14: -28453.04, 15: -28556.04, 20: -28314.12, 21: -27963.48, 22: -28470.04, 23: -28397.6, 24: -27918.08, 25: -28162.2, 26: -28287.52, 27: -28108.92, 28: -27895.56, 29: -28767.6, 30: -28508.2, 31: -28145.24, 36: -28101.92, 37: -28273.4, 38: -28768.68, 39: -27914.16, 40: -28104.04, 41: -28211.48, 42: -28077.84, 43: -28617.44, 44: -28170.08, 45: -28202.16, 46: -28098.28, 47: -28613.56, 52: -27345.04, 53: -27997.08, 54: -27589.96, 55: -28568.08, 56: -28299.68, 57: -27838.16, 58: -28371.76, 59: -28501.96, 60: -27766.04, 61: -28067.28, 62: -27999.92, 63: -27967.56}, 6: {4: -20659.84, 5: -21406.68, 6: -21600.72, 7: -20589.76, 8: -20438.0, 9: -20817.6, 10: -20938.96, 11: -20535.2, 12: -21032.8, 13: -20871.84, 14: -21278.68, 15: -21159.36, 20: -21114.88, 21: -20504.0, 22: -20406.16, 23: -20697.48, 24: -21114.88, 25: -20504.0, 26: -20406.16, 27: -20697.48, 28: -20519.96, 29: -21108.16, 30: -20293.72, 31: -20546.52, 36: -20991.92, 37: -20725.6, 38: -20896.88, 39: -20213.8, 40: -20973.96, 41: -20612.08, 42: -20659.04, 43: -20688.56, 44: -20796.08, 45: -20606.76, 46: -20796.08, 47: -20606.76, 52: -21006.48, 53: -20200.2, 54: -20433.92, 55: -20488.04, 56: -20337.4, 57: -20599.52, 58: -20682.2, 59: -20507.68, 60: -20796.92, 61: -20845.56, 62: -20379.24, 63: -20240.44}, 7: {4: -28593.96, 5: -28593.96, 6: -28769.4, 7: -28326.52, 8: -28303.04, 9: -28150.48, 10: -28803.52, 11: -28668.64, 12: -28347.92, 13: -28217.4, 14: -28395.12, 15: -28395.12, 20: -28037.08, 21: -27642.32, 22: -28252.08, 23: -28167.4, 24: -28409.52, 25: -28221.44, 26: -27949.84, 27: -28498.76, 28: -28026.28, 29: -28791.76, 30: -28427.32, 31: -28521.24, 36: -28113.72, 37: -27551.96, 38: -28273.44, 39: -28215.28, 40: -28049.96, 41: -28139.32, 42: -28324.32, 43: -27957.56, 44: -27860.76, 45: -28627.64, 46: -27771.56, 47: -28664.2, 52: -27266.52, 53: -28122.24, 54: -27507.28, 55: -27666.72, 56: -27902.08, 57: -27653.44, 58: -28186.4, 59: -27635.88, 60: -27752.64, 61: -28300.0, 62: -27983.2, 63: -27594.96}}, thresh_mc={'default': 0.0})
create wvfm_sum: WaveformSum(wvfm_dset_name=light/cwvfm, swvfm_dset_name=light/swvfm, stpc_wvfm_dset_name=light/stpc_wvfm)
create sipm_hit_finder: WaveformHitFinder(wvfm_dset_name=light/cwvfm, t_ns_dset_name=light/t_ns, hits_dset_name=light/sipm_hits, threshold=2, near_samples=4, hit_level=sipm, mad_factor=5.0, noise_factor=5.0, n_bins_rolled=5, rt_sqrt_factor=5.0, pe_weight=1.0, rising_edge=False, local_maxima=True)
create sum_hit_finder: WaveformHitFinder(wvfm_dset_name=light/swvfm, t_ns_dset_name=light/t_ns, hits_dset_name=light/sum_hits, threshold=4, near_samples=4, hit_level=sum, mad_factor=5.0, noise_factor=5.0, n_bins_rolled=5, rt_sqrt_factor=5.0, pe_weight=1.0, rising_edge=False, local_maxima=True)
create sum_tpc_hit_finder: WaveformHitFinder(wvfm_dset_name=light/stpc_wvfm, t_ns_dset_name=light/t_ns, hits_dset_name=light/sum_tpc_hits, threshold=4, near_samples=4, hit_level=sum_tpc, mad_factor=5.0, noise_factor=5.0, n_bins_rolled=5, rt_sqrt_factor=5.0, pe_weight=1.0, rising_edge=False, local_maxima=True, prompt_window=200.0, long_window=3200.0, tick_duration=16.0)
create flash_finder: FlashFinder(cwvfm_dset_name=light/cwvfm, sipm_hits_dset_name=light/sipm_hits, sum_hits_dset_name=light/sum_hits, stpc_wvfm_dset_name=light/stpc_wvfm, eps=10, min_samples=1, nchantpc=48, flash_dset_name=light/flash)
RunData.init(light/events)
Geometry.init(light/events)
LArData.init(light/events)
H5FlowDatasetLoopGenerator.init()
timestamp_corrector.init(light/events)
wvfm_filt.init(light/events)
wvfm_align.init(light/events)
wvfm_calib.init(light/events)
wvfm_sum.init(light/events)
sipm_hit_finder.init(light/events)
sum_hit_finder.init(light/events)
sum_tpc_hit_finder.init(light/events)
flash_finder.init(light/events)
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on light/events:
  timestamp_corrector -> wvfm_filt -> wvfm_align -> wvfm_calib -> wvfm_sum -> sipm_hit_finder -> sum_hit_finder -> sum_tpc_hit_finder -> flash_finder
  0%|          | 0/2 [00:00<?, ?it/s]/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/flow.venv/lib/python3.11/site-packages/numpy/lib/_nanfunctions_impl.py:2015: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/ndlar_flow/src/proto_nd_flow/reco/light/hit_finder.py:161: UserWarning: Warning: converting a masked element to nan.
  prompt_int[i, j, k] = np.sum(summed_wvfm[i, j, k, t0_bin:end_prompt])
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/ndlar_flow/src/proto_nd_flow/reco/light/hit_finder.py:162: UserWarning: Warning: converting a masked element to nan.
  total_int[i, j, k] = np.sum(summed_wvfm[i, j, k, t0_bin:end_total])
 50%|#####     | 1/2 [00:03<00:03,  3.40s/it]/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/flow.venv/lib/python3.11/site-packages/numpy/lib/_nanfunctions_impl.py:2015: RuntimeWarning: Degrees of freedom <= 0 for slice.
  var = nanvar(a, axis=axis, dtype=dtype, out=out, ddof=ddof,
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/ndlar_flow/src/proto_nd_flow/reco/light/hit_finder.py:161: UserWarning: Warning: converting a masked element to nan.
  prompt_int[i, j, k] = np.sum(summed_wvfm[i, j, k, t0_bin:end_prompt])
/pscratch/sd/l/lmlepin/2x2_neutron_production/run-ndlar-flow/ndlar_flow/src/proto_nd_flow/reco/light/hit_finder.py:162: UserWarning: Warning: converting a masked element to nan.
  total_int[i, j, k] = np.sum(summed_wvfm[i, j, k, t0_bin:end_total])
100%|##########| 2/2 [00:04<00:00,  1.17s/it]100%|##########| 2/2 [00:04<00:00,  2.28s/it]
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
timestamp_corrector.finish(light/events)
wvfm_filt.finish(light/events)
wvfm_align.finish(light/events)
wvfm_calib.finish(light/events)
wvfm_sum.finish(light/events)
sipm_hit_finder.finish(light/events)
sum_hit_finder.finish(light/events)
sum_tpc_hit_finder.finish(light/events)
flash_finder.finish(light/events)
RunData.finish(light/events)
Geometry.finish(light/events)
LArData.finish(light/events)
~~~~~~~~~~~~~~

RUNNING h5flow -z lzf -c yamls/proto_nd_flow/workflows/charge/charge_light_assoc_mc.yaml -i /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5 -o /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
WARNING:root:Running without mpi4py because No module named 'mpi4py'
~~~ H5FLOW ~~~
output file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
input file: /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
compression: lzf
~~~~~~~~~~~~~~

~~~ WORKFLOW ~~~
yamls/proto_nd_flow/workflows/charge/charge_light_assoc_mc.yaml
~~~~~~~~~~~~~~~~

~~~ INIT ~~~
Hello
create RunData() /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
Could not find generator description, using default loop behavior on charge/events dataset
create H5FlowDatasetLoopGenerator(charge/events) /global/cfs/cdirs/dune/users/lmlepin/2x2_neutron_prod/PNS_tests/DTG_P385_test.FLOW.hdf5
create charge_light_associator: Charge2LightAssociation(light_event_dset_name=light/events, ext_trigs_dset_name=charge/ext_trigs, unix_ts_window=1, ts_window=30)
RunData.init(charge/events)
H5FlowDatasetLoopGenerator.init()
charge_light_associator.init(charge/events)
~~~~~~~~~~~~

~~~ RUN ~~~
Run loop on charge/events:
  charge_light_associator
  0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.10it/s]
~~~~~~~~~~~

~~~ FINISH ~~~
H5FlowDatasetLoopGenerator.finish()
charge_light_associator.finish(charge/events)
Total charge trigger matching: 20/20 (1.0000)
Total charge event matching: 20/20 (1.0000)
Total light event matching: 20/20 (1.0000)
RunData.finish(charge/events)
~~~~~~~~~~~~~~

